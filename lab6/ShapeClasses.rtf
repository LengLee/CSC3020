{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
 * To change this license header, choose License Headers in Project Properties.\
 * To change this template file, choose Tools | Templates\
 * and open the template in the editor.\
 */\
package Question1;\
\
import javax.swing.JOptionPane;\
\
/**\
 *\
 * @author LengLee\
 */\
public class CSC3020_Homework6 \{\
\
     public static void main(String args [])\{\
         \
        String output; \
        \
        quadrilateral q = new quadrilateral(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0); \
        trapazoid t = new trapazoid(1.1,2.2, 3.3, 4.4, 5.5, 6.6, 7.7 , 8.8); \
        parallelogram p = new parallelogram(1.3,2.4,3.5,4.6,5.7,6.8,7.9,8.10); \
        rectangle r = new rectangle(2.0, 3.0,4.0,5.0,6.0,7.0,8.0,9.0); \
        square s =new square (1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0); \
        \
        output = q.toString() + t.toString() + p.toString() \
                + r.toString() + s.toString();  \
        \
        JOptionPane.showMessageDialog(null,output,\
                "Output",JOptionPane.PLAIN_MESSAGE); \
        System.exit(0); \
         \
    \}\
     \
\}\
\
    \
    \
\
/*\
 * To change this license header, choose License Headers in Project Properties.\
 * To change this template file, choose Tools | Templates\
 * and open the template in the editor.\
 */\
package Question1;\
\
/**\
 *\
 * @author LengLee\
 */\
public class parallelogram extends trapazoid \{\
    \
   \
   parallelogram(double x1, double y1, double x2, double y2, \
           double x3, double y3, double x4, double y4)\{\
       super(x1,y1,x2,y2,x3,y3,x4,y4); \
   \}\
\
    double width()\{\
        if(getP().getYcoord() == getQ().getYcoord())\
            return Math.abs(getP().getXcoord()-getQ().getXcoord()); \
        else\
            return Math.abs(getQ().getXcoord() - getR().getXcoord() ); \
        \
    \}\
    \
    @Override\
    public String toString()\{\
    return "the parallelogram coordinates : " + printCoord() + "\\nthe height : "\
            + height()+ " \\nthe area : " +area()+ "\\nthe width : " +width(); \
    \
    \} \
    \
    \
    \
    \
\
    \
\}\
\
/*\
 * To change this license header, choose License Headers in Project Properties.\
 * To change this template file, choose Tools | Templates\
 * and open the template in the editor.\
 */\
package Question1;\
\
/**\
 *\
 * @author LengLee\
 */\
public class point \{\
    \
    private double xcoord; \
    private double ycoord; \
    \
    point()\{\
        xcoord=0.0; \
        ycoord = 0.0; \
    \}\
    \
    point(double a , double b)\{\
        xcoord=a;\
        ycoord=b; \
    \}\
    \
    double getXcoord()\{\
        return xcoord; \
    \}\
            \
    double getYcoord()\{\
        return ycoord;\
    \}\
    @Override\
    public String toString()\{\
        return "(" + getXcoord() + " , " + getYcoord() + ")" ;\
    \}\
            \
            \
\}\
\
/*\
 * To change this license header, choose License Headers in Project Properties.\
 * To change this template file, choose Tools | Templates\
 * and open the template in the editor.\
 */\
package Question1;\
\
/**\
 *\
 * @author LengLee\
 */\
public class quadrilateral \{\
    point p,q,r,s; \
    \
    public quadrilateral()\{\
        p = new point(0,0); \
        q = new point (0,0);\
        r = new point(0,0); \
        s = new point(0,0); \
        \
    \}\
    \
    public quadrilateral(double x1, double y1, double x2, double y2 , double x3\
    , double y3 , double x4 , double y4) \{\
        p = new point(x1 , y1); \
        q = new point (x2 , y2);\
        r = new point(x3, y3); \
        s = new point(x4, y4); \
               \
\}\
    point getP()\{\
        return p; \
    \}\
    point getQ()\{\
        return q; \
    \}\
    point getR()\{\
        return r;\
    \}\
    point getS()\{\
        return s; \
    \}\
    \
    @Override \
    public String toString()\{\
        return "The coordinates are: " + printCoord() ;\
    \}\
    \
    String printCoord()\{\
        return p.toString() + q.toString() + r.toString() + s.toString();\
    \}\
    \
\}\
\
\
/*\
 * To change this license header, choose License Headers in Project Properties.\
 * To change this template file, choose Tools | Templates\
 * and open the template in the editor.\
 */\
package Question1;\
\
/**\
 *\
 * @author LengLee\
 */\
public class rectangle extends parallelogram \{\
    \
    rectangle(double x1, double y1, double x2, double y2, double x3, double y3, \
            double x4 , double y4)\{\
        super(x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4); \
        \
    \}\
    \
    @Override \
    public String toString()\{\
        return "the rectangle coordinates : " + printCoord() + "\\nthe height : "\
            + height()+ "\\n the area : " +area()+ "\\nthe width : " +width(); \
    \}\
\}\
\
\
/*\
 * To change this license header, choose License Headers in Project Properties.\
 * To change this template file, choose Tools | Templates\
 * and open the template in the editor.\
 */\
package Question1;\
\
/**\
 *\
 * @author LengLee\
 */\
public class square extends parallelogram \{\
     square(double x1, double y1, double x2, double y2, double x3, double y3, \
            double x4 , double y4)\{\
        super(x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4); \
        \
    \}\
    \
    @Override \
    public String toString()\{\
        return "the rectangle coordinates : " + printCoord() + "\\nthe height : "\
            + height()+ "\\n the area : " +area()+ "\\nthe width : " +width(); \
    \}\
\}\
\
\
/*\
 * To change this license header, choose License Headers in Project Properties.\
 * To change this template file, choose Tools | Templates\
 * and open the template in the editor.\
 */\
package Question1;\
\
/**\
 *\
 * @author LengLee\
 */\
public class trapazoid extends quadrilateral \{\
 \
    trapazoid(double x1, double y1, double x2, double y2 , double x3\
    , double y3 , double x4 , double y4)\{\
        super(x1,y1,x2,y2,x3,y3,x4,y4); \
    \}\
    \
    double height()\{\
        if(getP().getYcoord() == getQ().getYcoord())\
            return Math.abs(getQ().getYcoord() - getR().getYcoord()); \
        else \
            return Math.abs(getP().getYcoord() - getQ().getYcoord()); \
    \}\
    \
    double sum()\{\
        if(getP().getYcoord() == getQ().getYcoord())\
            return Math.abs(getP().getXcoord() - getQ().getXcoord()) + \
                    \
                    Math.abs(getR().getXcoord() - getS().getXcoord()); \
        else \
             return Math.abs(getQ().getXcoord() - getR().getXcoord()) + \
                    Math.abs(getS().getXcoord() - getP().getXcoord());  \
           \
    \}\
    double area()\{\
        return (sum() * height())/2; \
    \} \
    \
    @Override\
    public String toString()\{\
        return "\\n the coordinates of trapazoid is " + printCoord() + \
                "\\n the height is " + height() + "\\n the area is " + area(); \
    \}\
    \
    \
            \
    \
\}\
}